FROM openjdk:21-jdk-slim

# Installation des dépendances système
RUN apt-get update && \
    apt-get install -y wget curl netcat-traditional postgresql-client git && \
    rm -rf /var/lib/apt/lists/*

# Variables d'environnement
ENV POLARIS_HOME=/opt/polaris
ENV JAVA_OPTS="-Xmx2g -Xms1g -XX:+UseG1GC --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED"
ENV DB_HOST=postgres
ENV DB_PORT=5432
ENV DB_NAME=polaris
ENV DB_USER=polaris
ENV DB_PASSWORD=polaris123

# Création des répertoires
RUN mkdir -p ${POLARIS_HOME}/lib \
    ${POLARIS_HOME}/config \
    ${POLARIS_HOME}/logs

# Téléchargement des dépendances
RUN wget -O ${POLARIS_HOME}/lib/postgresql-42.7.1.jar https://jdbc.postgresql.org/download/postgresql-42.7.1.jar && \
    wget -O ${POLARIS_HOME}/lib/eclipselink-4.0.2.jar https://repo1.maven.org/maven2/org/eclipse/persistence/eclipselink/4.0.2/eclipselink-4.0.2.jar && \
    wget -O ${POLARIS_HOME}/lib/jakarta.persistence-api-3.1.0.jar https://repo1.maven.org/maven2/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar

# Construction d'Apache Polaris en plusieurs étapes pour éviter les erreurs
WORKDIR /tmp/build

# Cloner le repository
RUN git clone --depth 1 --branch apache-polaris-0.9.0-incubating https://github.com/apache/polaris.git .

# Construire le projet avec Gradle
RUN ./gradlew clean build -x test --no-daemon --info

# Trouver et copier tous les JARs construits
RUN echo "=== JARs trouvés dans le projet ===" && \
    find . -name "*.jar" -type f | grep -E "(build/libs|build/distributions)" | sort && \
    echo "=== Copie des JARs vers POLARIS_HOME ===" && \
    find . -name "*.jar" -type f | grep -E "build/libs" | while read jar; do \
        echo "Copie de $jar"; \
        cp "$jar" ${POLARIS_HOME}/lib/; \
    done

# Rechercher et configurer le JAR principal
RUN MAIN_JAR=$(find ${POLARIS_HOME}/lib -name "*polaris*.jar" -o -name "*service*.jar" -o -name "*all*.jar" | head -1) && \
    if [ -n "$MAIN_JAR" ]; then \
        echo "JAR principal trouvé: $MAIN_JAR" && \
        ln -sf "$MAIN_JAR" ${POLARIS_HOME}/polaris.jar; \
    else \
        echo "Aucun JAR principal trouvé, utilisation du premier JAR disponible" && \
        FIRST_JAR=$(ls ${POLARIS_HOME}/lib/*.jar | head -1) && \
        ln -sf "$FIRST_JAR" ${POLARIS_HOME}/polaris.jar; \
    fi

# Nettoyer le répertoire de build
RUN rm -rf /tmp/build

# Copier les fichiers de configuration
COPY config/persistence.xml ${POLARIS_HOME}/config/
COPY config/polaris.properties ${POLARIS_HOME}/config/
COPY config/log4j2.xml ${POLARIS_HOME}/config/

# Copier le script de démarrage simplifié
COPY polaris-start-simple.sh ${POLARIS_HOME}/start-polaris.sh
RUN chmod +x ${POLARIS_HOME}/start-polaris.sh

# Vérification finale
RUN echo "=== Vérification finale ===" && \
    ls -la ${POLARIS_HOME}/ && \
    echo "=== JARs dans lib ===" && \
    ls -la ${POLARIS_HOME}/lib/ && \
    echo "=== JAR principal ===" && \
    ls -la ${POLARIS_HOME}/polaris.jar && \
    echo "=== Configuration ===" && \
    ls -la ${POLARIS_HOME}/config/

WORKDIR ${POLARIS_HOME}

# Exposition des ports
EXPOSE 8080 8443

# Variables d'environnement finales
ENV CLASSPATH="${POLARIS_HOME}/lib/*:${POLARIS_HOME}/config:${POLARIS_HOME}"
ENV PATH="${POLARIS_HOME}:${PATH}"

# Point d'entrée
CMD ["./start-polaris.sh"]
