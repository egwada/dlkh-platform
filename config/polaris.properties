# Configuration principale Apache Polaris 0.9.0
server.port=8080
server.servlet.context-path=/

# Configuration de la base de données PostgreSQL
spring.datasource.url=jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:polaris}
spring.datasource.username=${DB_USER:polaris}
spring.datasource.password=${DB_PASSWORD:polaris123}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuration du pool de connexions HikariCP
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Configuration JPA pour Polaris 0.9.0
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Configuration de sécurité Polaris 0.9.0
polaris.authenticator.type=default
polaris.authenticator.enabled=true
polaris.oauth2.default-client-id=polaris-client
polaris.oauth2.default-client-secret=polaris-secret
polaris.oauth2.token-expiration=3600

# Configuration CORS
polaris.cors.enabled=true
polaris.cors.allowed-origins=*
polaris.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,HEAD
polaris.cors.allowed-headers=*
polaris.cors.exposed-headers=*
polaris.cors.allow-credentials=true

# Configuration du catalogue Polaris 0.9.0
polaris.catalog.default-base-location=file:///tmp/polaris-warehouse
polaris.catalog.default-warehouse=default-warehouse
polaris.catalog.storage-type=FILE
polaris.catalog.allow-external-table-location=true
polaris.catalog.allow-unstructured-table-location=false

# Configuration des métriques Polaris 0.9.0
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Configuration des logs Polaris 0.9.0
logging.level.org.apache.polaris=INFO
logging.level.org.hibernate=WARN
logging.level.org.springframework=INFO
logging.level.org.eclipse.jetty=WARN
logging.file.name=/opt/polaris/logs/polaris.log
logging.file.max-size=100MB
logging.file.max-history=30
logging.pattern.file=%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Configuration du cache Polaris 0.9.0
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=10000,expireAfterWrite=3600s
polaris.cache.entity-cache-enabled=true
polaris.cache.entity-cache-size=1000
polaris.cache.entity-cache-ttl=600

# Configuration de la santé Polaris 0.9.0
management.health.defaults.enabled=true
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.diskspace.threshold=100MB
management.health.ping.enabled=true

# Configuration de l'API REST Polaris 0.9.0
polaris.api.management.base-path=/api/management
polaris.api.catalog.base-path=/api/catalog
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
server.connection-timeout=30000
server.servlet.session.timeout=1800

# Configuration de l'authentification Polaris 0.9.0
polaris.auth.type=default
polaris.auth.realm=Polaris
polaris.auth.default-admin-enabled=true
polaris.auth.default-admin-username=admin
polaris.auth.default-admin-password=admin123
polaris.auth.token-broker.enabled=true
polaris.auth.token-broker.secret=change-this-secret-in-production

# Configuration des rôles par défaut
polaris.bootstrap.realm=default-realm
polaris.bootstrap.admin-username=admin
polaris.bootstrap.admin-password=admin123
