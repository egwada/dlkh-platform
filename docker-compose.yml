services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: polaris
      POSTGRES_USER: polaris
      POSTGRES_PASSWORD: polaris123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - polaris-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U polaris -d polaris"]
      interval: 10s
      timeout: 5s
      retries: 5

  polaris:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: polaris
      DB_USER: polaris
      DB_PASSWORD: polaris123
      JAVA_OPTS: -Xmx2g -Xms1g -Djava.awt.headless=true -XX:+UseG1GC --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED
      POLARIS_LOG_LEVEL: INFO
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - polaris_logs:/opt/polaris/logs
      - ./config:/opt/polaris/config
    networks:
      - polaris-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@polaris.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: 'True'
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - polaris-network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  polaris_logs:
    driver: local
  pgadmin_data:
    driver: local

networks:
  polaris-network:
    driver: bridge
    name: polaris-network